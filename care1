Как работает Java?

Любая программа, написанная на любом языке, представляет собой набор инструкций для компьютера или мобильного устройства
. Компьютер способен воспринимать только машинный код (последовательность нулей и единиц). Поэтому инмтрукции,
написанные на языках общения и языках программирования он не понимает. Поэтому был придуман компилятор (compiler),
понимающий языки и, в том числе, Java. Он берет код, написанный на Java и преобразует его в байт-код. Этот код компьютер
 тоже не понимает. В Java изначально создаются файлы с расширением .java, при преобразовании в байт-код, создается файл
 с расширением .class. Сразу в машинный код преобразовывать нельзя, так как работа производится на устройствах с разными
  процессорами. Одни могут понимать данный код, другие не могут. Вся философия языка Java построена по принципу: однажды
   написано - везде работает.
        (once written - works everywhere).
  Поэтому была придумана JVM (Java virtual machine), программа, преобразующая байт-код в машинный код. Чтобы заработала
  программа, написанная на Java, JVM устанавливается на компьютер. Во  всем мире она установлена на устройства по
  умолчанию. Для корректно работы JVM необходима библиотека классов Java. Обычно JVM и библиотека поставляются вместе.
  Этот комплект называется JRE (Java Runtime Environment) или среда выполнения Java. Используя JRE можно запускать
  программы, написанные на Java. Для создания программ на Java необходим JDK (Java Development Kit) или комплект
  разработчика Java, который включает JRE и компилятор, документацию, рпимеры и некоторые утилиты).

************************************************************************************************************************

Абстрактные классы и интерфейсы.

В функциональных интерфейсах, где используется один абстрактный метод, есть возможность использовать реализацию по
умолчанию путем добавления ключевого слова default перед написанием метода. То есть добавить еще один метод в интерфейс.
Поля или переменные экземпляра относятся к объекту, а статические поля - к классу. В интерфейсах можно объявлять
статические поля и методы. Обратиться к такому полю можно через имя класса. Такие поля по умолчанию public static final.
Поэтому называются они статические константы, нзвания их можно писать заглавными буквами.

************************************************************************************************************************

Чем отличаются абстрактные классы и интерфейсы?

1. Интерфейс - это контракт. Он лишь описывает поведение: ЧТО должен делать объект. Но он не описывает КАК он должен
что-либо делать. Интерфейсы не хранят состояние объекта.

Абстрактные классы могут хранить состояние объекта и содержать реализацию.
При этом интерфейсы тоже могут содержать реализацию по умолчанию, но эта возможность была добавлена только для обратной
совместимости, чтобы не нарушить работу программ, использующих интерфейс.

2.